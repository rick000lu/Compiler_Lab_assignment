未在文法中使用終結語詞

    lSTRING


狀態 101 衝突：1 項偏移/縮減


文法

    0 $accept: prog $end

    1 prog: mthdcls
    2     | %empty

    3 mthdcls: mthdcl mthdcls
    4        | mthdcl

    5 type: lINT
    6     | lREAL

    7 mthdcl: type lMAIN lID lLP formals lRP block
    8       | type lID lLP formals lRP block

    9 formals: formal oformal
   10        | %empty

   11 formal: type lID

   12 oformal: lCOMMA formal oformal
   13        | %empty

   14 block: lBEGIN stmts lEND

   15 stmts: stmt ostmts

   16 ostmts: stmt ostmts
   17       | %empty

   18 stmt: block
   19     | localvardcl
   20     | assignstmt
   21     | returnstmt
   22     | ifstmt
   23     | writestmt
   24     | readstmt

   25 localvardcl: type lID lSEMI
   26            | type assignstmt

   27 assignstmt: lID lASSIGN expr lSEMI

   28 returnstmt: lRETURN expr lSEMI

   29 ifstmt: lIF lLP boolexpr lRP stmt elsestmt

   30 elsestmt: lELSE stmt
   31         | %empty

   32 writestmt: lWRITE lLP expr lCOMMA lQSTR lRP lSEMI

   33 readstmt: lREAD lLP lID lCOMMA lQSTR lRP lSEMI

   34 expr: multiexpr omultiexpr

   35 multiexpr: primaryexpr oprimaryexpr

   36 omultiexpr: lADD multiexpr omultiexpr
   37           | lMINUS multiexpr omultiexpr
   38           | %empty

   39 primaryexpr: lINUM
   40            | lRNUM
   41            | lID
   42            | lLP expr lRP
   43            | lID lLP actualparams lRP

   44 oprimaryexpr: lTIMES primaryexpr oprimaryexpr
   45             | lDIVIDE primaryexpr oprimaryexpr
   46             | %empty

   47 boolexpr: expr lEQU expr
   48         | expr lNEQ expr
   49         | expr lGT expr
   50         | expr lGE expr
   51         | expr lLT expr
   52         | expr lLE expr

   53 actualparams: actualparam
   54             | %empty

   55 actualparam: expr oactualparam

   56 oactualparam: lCOMMA expr oactualparam
   57             | %empty


終結語詞，附有它們出現處的規則

    $end (0) 0
    error (256)
    lWRITE (258) 32
    lREAD (259) 33
    lIF (260) 29
    lASSIGN (261) 27
    lRETURN (262) 28
    lBEGIN (263) 14
    lEND (264) 14
    lEQU (265) 47
    lNEQ (266) 48
    lGT (267) 49
    lLT (268) 51
    lGE (269) 50
    lLE (270) 52
    lADD (271) 36
    lMINUS (272) 37
    lTIMES (273) 44
    lDIVIDE (274) 45
    lLP (275) 7 8 29 32 33 42 43
    lRP (276) 7 8 29 32 33 42 43
    lINT (277) 5
    lREAL (278) 6
    lSTRING (279)
    lELSE (280) 30
    lMAIN (281) 7
    lSEMI (282) 25 27 28 32 33
    lCOMMA (283) 12 32 33 56
    lID (284) 7 8 11 25 27 33 41 43
    lINUM (285) 39
    lRNUM (286) 40
    lQSTR (287) 32 33


非終結語詞，附有它們出現處的規則

    $accept (33)
        於左側： 0
    prog (34)
        於左側： 1 2
        於右側： 0
    mthdcls (35)
        於左側： 3 4
        於右側： 1 3
    type (36)
        於左側： 5 6
        於右側： 7 8 11 25 26
    mthdcl (37)
        於左側： 7 8
        於右側： 3 4
    formals (38)
        於左側： 9 10
        於右側： 7 8
    formal (39)
        於左側： 11
        於右側： 9 12
    oformal (40)
        於左側： 12 13
        於右側： 9 12
    block (41)
        於左側： 14
        於右側： 7 8 18
    stmts (42)
        於左側： 15
        於右側： 14
    ostmts (43)
        於左側： 16 17
        於右側： 15 16
    stmt (44)
        於左側： 18 19 20 21 22 23 24
        於右側： 15 16 29 30
    localvardcl (45)
        於左側： 25 26
        於右側： 19
    assignstmt (46)
        於左側： 27
        於右側： 20 26
    returnstmt (47)
        於左側： 28
        於右側： 21
    ifstmt (48)
        於左側： 29
        於右側： 22
    elsestmt (49)
        於左側： 30 31
        於右側： 29
    writestmt (50)
        於左側： 32
        於右側： 23
    readstmt (51)
        於左側： 33
        於右側： 24
    expr (52)
        於左側： 34
        於右側： 27 28 32 42 47 48 49 50 51 52 55 56
    multiexpr (53)
        於左側： 35
        於右側： 34 36 37
    omultiexpr (54)
        於左側： 36 37 38
        於右側： 34 36 37
    primaryexpr (55)
        於左側： 39 40 41 42 43
        於右側： 35 44 45
    oprimaryexpr (56)
        於左側： 44 45 46
        於右側： 35 44 45
    boolexpr (57)
        於左側： 47 48 49 50 51 52
        於右側： 29
    actualparams (58)
        於左側： 53 54
        於右側： 43
    actualparam (59)
        於左側： 55
        於右側： 53
    oactualparam (60)
        於左側： 56 57
        於右側： 55 56


狀態 0

    0 $accept: . prog $end
    1 prog: . mthdcls
    2     | . %empty  [$end]
    3 mthdcls: . mthdcl mthdcls
    4        | . mthdcl
    5 type: . lINT
    6     | . lREAL
    7 mthdcl: . type lMAIN lID lLP formals lRP block
    8       | . type lID lLP formals lRP block

    lINT   偏移，並進入狀態 1
    lREAL  偏移，並進入狀態 2

    $default  使用規則 2 以縮減 (prog)

    prog     進入狀態 3
    mthdcls  進入狀態 4
    type     進入狀態 5
    mthdcl   進入狀態 6


狀態 1

    5 type: lINT .

    $default  使用規則 5 以縮減 (type)


狀態 2

    6 type: lREAL .

    $default  使用規則 6 以縮減 (type)


狀態 3

    0 $accept: prog . $end

    $end  偏移，並進入狀態 7


狀態 4

    1 prog: mthdcls .

    $default  使用規則 1 以縮減 (prog)


狀態 5

    7 mthdcl: type . lMAIN lID lLP formals lRP block
    8       | type . lID lLP formals lRP block

    lMAIN  偏移，並進入狀態 8
    lID    偏移，並進入狀態 9


狀態 6

    3 mthdcls: . mthdcl mthdcls
    3        | mthdcl . mthdcls
    4        | . mthdcl
    4        | mthdcl .  [$end]
    5 type: . lINT
    6     | . lREAL
    7 mthdcl: . type lMAIN lID lLP formals lRP block
    8       | . type lID lLP formals lRP block

    lINT   偏移，並進入狀態 1
    lREAL  偏移，並進入狀態 2

    $default  使用規則 4 以縮減 (mthdcls)

    mthdcls  進入狀態 10
    type     進入狀態 5
    mthdcl   進入狀態 6


狀態 7

    0 $accept: prog $end .

    $default  接受


狀態 8

    7 mthdcl: type lMAIN . lID lLP formals lRP block

    lID  偏移，並進入狀態 11


狀態 9

    8 mthdcl: type lID . lLP formals lRP block

    lLP  偏移，並進入狀態 12


狀態 10

    3 mthdcls: mthdcl mthdcls .

    $default  使用規則 3 以縮減 (mthdcls)


狀態 11

    7 mthdcl: type lMAIN lID . lLP formals lRP block

    lLP  偏移，並進入狀態 13


狀態 12

    5 type: . lINT
    6     | . lREAL
    8 mthdcl: type lID lLP . formals lRP block
    9 formals: . formal oformal
   10        | . %empty  [lRP]
   11 formal: . type lID

    lINT   偏移，並進入狀態 1
    lREAL  偏移，並進入狀態 2

    $default  使用規則 10 以縮減 (formals)

    type     進入狀態 14
    formals  進入狀態 15
    formal   進入狀態 16


狀態 13

    5 type: . lINT
    6     | . lREAL
    7 mthdcl: type lMAIN lID lLP . formals lRP block
    9 formals: . formal oformal
   10        | . %empty  [lRP]
   11 formal: . type lID

    lINT   偏移，並進入狀態 1
    lREAL  偏移，並進入狀態 2

    $default  使用規則 10 以縮減 (formals)

    type     進入狀態 14
    formals  進入狀態 17
    formal   進入狀態 16


狀態 14

   11 formal: type . lID

    lID  偏移，並進入狀態 18


狀態 15

    8 mthdcl: type lID lLP formals . lRP block

    lRP  偏移，並進入狀態 19


狀態 16

    9 formals: formal . oformal
   12 oformal: . lCOMMA formal oformal
   13        | . %empty  [lRP]

    lCOMMA  偏移，並進入狀態 20

    $default  使用規則 13 以縮減 (oformal)

    oformal  進入狀態 21


狀態 17

    7 mthdcl: type lMAIN lID lLP formals . lRP block

    lRP  偏移，並進入狀態 22


狀態 18

   11 formal: type lID .

    $default  使用規則 11 以縮減 (formal)


狀態 19

    8 mthdcl: type lID lLP formals lRP . block
   14 block: . lBEGIN stmts lEND

    lBEGIN  偏移，並進入狀態 23

    block  進入狀態 24


狀態 20

    5 type: . lINT
    6     | . lREAL
   11 formal: . type lID
   12 oformal: lCOMMA . formal oformal

    lINT   偏移，並進入狀態 1
    lREAL  偏移，並進入狀態 2

    type    進入狀態 14
    formal  進入狀態 25


狀態 21

    9 formals: formal oformal .

    $default  使用規則 9 以縮減 (formals)


狀態 22

    7 mthdcl: type lMAIN lID lLP formals lRP . block
   14 block: . lBEGIN stmts lEND

    lBEGIN  偏移，並進入狀態 23

    block  進入狀態 26


狀態 23

    5 type: . lINT
    6     | . lREAL
   14 block: . lBEGIN stmts lEND
   14      | lBEGIN . stmts lEND
   15 stmts: . stmt ostmts
   18 stmt: . block
   19     | . localvardcl
   20     | . assignstmt
   21     | . returnstmt
   22     | . ifstmt
   23     | . writestmt
   24     | . readstmt
   25 localvardcl: . type lID lSEMI
   26            | . type assignstmt
   27 assignstmt: . lID lASSIGN expr lSEMI
   28 returnstmt: . lRETURN expr lSEMI
   29 ifstmt: . lIF lLP boolexpr lRP stmt elsestmt
   32 writestmt: . lWRITE lLP expr lCOMMA lQSTR lRP lSEMI
   33 readstmt: . lREAD lLP lID lCOMMA lQSTR lRP lSEMI

    lWRITE   偏移，並進入狀態 27
    lREAD    偏移，並進入狀態 28
    lIF      偏移，並進入狀態 29
    lRETURN  偏移，並進入狀態 30
    lBEGIN   偏移，並進入狀態 23
    lINT     偏移，並進入狀態 1
    lREAL    偏移，並進入狀態 2
    lID      偏移，並進入狀態 31

    type         進入狀態 32
    block        進入狀態 33
    stmts        進入狀態 34
    stmt         進入狀態 35
    localvardcl  進入狀態 36
    assignstmt   進入狀態 37
    returnstmt   進入狀態 38
    ifstmt       進入狀態 39
    writestmt    進入狀態 40
    readstmt     進入狀態 41


狀態 24

    8 mthdcl: type lID lLP formals lRP block .

    $default  使用規則 8 以縮減 (mthdcl)


狀態 25

   12 oformal: . lCOMMA formal oformal
   12        | lCOMMA formal . oformal
   13        | . %empty  [lRP]

    lCOMMA  偏移，並進入狀態 20

    $default  使用規則 13 以縮減 (oformal)

    oformal  進入狀態 42


狀態 26

    7 mthdcl: type lMAIN lID lLP formals lRP block .

    $default  使用規則 7 以縮減 (mthdcl)


狀態 27

   32 writestmt: lWRITE . lLP expr lCOMMA lQSTR lRP lSEMI

    lLP  偏移，並進入狀態 43


狀態 28

   33 readstmt: lREAD . lLP lID lCOMMA lQSTR lRP lSEMI

    lLP  偏移，並進入狀態 44


狀態 29

   29 ifstmt: lIF . lLP boolexpr lRP stmt elsestmt

    lLP  偏移，並進入狀態 45


狀態 30

   28 returnstmt: lRETURN . expr lSEMI
   34 expr: . multiexpr omultiexpr
   35 multiexpr: . primaryexpr oprimaryexpr
   39 primaryexpr: . lINUM
   40            | . lRNUM
   41            | . lID
   42            | . lLP expr lRP
   43            | . lID lLP actualparams lRP

    lLP    偏移，並進入狀態 46
    lID    偏移，並進入狀態 47
    lINUM  偏移，並進入狀態 48
    lRNUM  偏移，並進入狀態 49

    expr         進入狀態 50
    multiexpr    進入狀態 51
    primaryexpr  進入狀態 52


狀態 31

   27 assignstmt: lID . lASSIGN expr lSEMI

    lASSIGN  偏移，並進入狀態 53


狀態 32

   25 localvardcl: type . lID lSEMI
   26            | type . assignstmt
   27 assignstmt: . lID lASSIGN expr lSEMI

    lID  偏移，並進入狀態 54

    assignstmt  進入狀態 55


狀態 33

   18 stmt: block .

    $default  使用規則 18 以縮減 (stmt)


狀態 34

   14 block: lBEGIN stmts . lEND

    lEND  偏移，並進入狀態 56


狀態 35

    5 type: . lINT
    6     | . lREAL
   14 block: . lBEGIN stmts lEND
   15 stmts: stmt . ostmts
   16 ostmts: . stmt ostmts
   17       | . %empty  [lEND]
   18 stmt: . block
   19     | . localvardcl
   20     | . assignstmt
   21     | . returnstmt
   22     | . ifstmt
   23     | . writestmt
   24     | . readstmt
   25 localvardcl: . type lID lSEMI
   26            | . type assignstmt
   27 assignstmt: . lID lASSIGN expr lSEMI
   28 returnstmt: . lRETURN expr lSEMI
   29 ifstmt: . lIF lLP boolexpr lRP stmt elsestmt
   32 writestmt: . lWRITE lLP expr lCOMMA lQSTR lRP lSEMI
   33 readstmt: . lREAD lLP lID lCOMMA lQSTR lRP lSEMI

    lWRITE   偏移，並進入狀態 27
    lREAD    偏移，並進入狀態 28
    lIF      偏移，並進入狀態 29
    lRETURN  偏移，並進入狀態 30
    lBEGIN   偏移，並進入狀態 23
    lINT     偏移，並進入狀態 1
    lREAL    偏移，並進入狀態 2
    lID      偏移，並進入狀態 31

    $default  使用規則 17 以縮減 (ostmts)

    type         進入狀態 32
    block        進入狀態 33
    ostmts       進入狀態 57
    stmt         進入狀態 58
    localvardcl  進入狀態 36
    assignstmt   進入狀態 37
    returnstmt   進入狀態 38
    ifstmt       進入狀態 39
    writestmt    進入狀態 40
    readstmt     進入狀態 41


狀態 36

   19 stmt: localvardcl .

    $default  使用規則 19 以縮減 (stmt)


狀態 37

   20 stmt: assignstmt .

    $default  使用規則 20 以縮減 (stmt)


狀態 38

   21 stmt: returnstmt .

    $default  使用規則 21 以縮減 (stmt)


狀態 39

   22 stmt: ifstmt .

    $default  使用規則 22 以縮減 (stmt)


狀態 40

   23 stmt: writestmt .

    $default  使用規則 23 以縮減 (stmt)


狀態 41

   24 stmt: readstmt .

    $default  使用規則 24 以縮減 (stmt)


狀態 42

   12 oformal: lCOMMA formal oformal .

    $default  使用規則 12 以縮減 (oformal)


狀態 43

   32 writestmt: lWRITE lLP . expr lCOMMA lQSTR lRP lSEMI
   34 expr: . multiexpr omultiexpr
   35 multiexpr: . primaryexpr oprimaryexpr
   39 primaryexpr: . lINUM
   40            | . lRNUM
   41            | . lID
   42            | . lLP expr lRP
   43            | . lID lLP actualparams lRP

    lLP    偏移，並進入狀態 46
    lID    偏移，並進入狀態 47
    lINUM  偏移，並進入狀態 48
    lRNUM  偏移，並進入狀態 49

    expr         進入狀態 59
    multiexpr    進入狀態 51
    primaryexpr  進入狀態 52


狀態 44

   33 readstmt: lREAD lLP . lID lCOMMA lQSTR lRP lSEMI

    lID  偏移，並進入狀態 60


狀態 45

   29 ifstmt: lIF lLP . boolexpr lRP stmt elsestmt
   34 expr: . multiexpr omultiexpr
   35 multiexpr: . primaryexpr oprimaryexpr
   39 primaryexpr: . lINUM
   40            | . lRNUM
   41            | . lID
   42            | . lLP expr lRP
   43            | . lID lLP actualparams lRP
   47 boolexpr: . expr lEQU expr
   48         | . expr lNEQ expr
   49         | . expr lGT expr
   50         | . expr lGE expr
   51         | . expr lLT expr
   52         | . expr lLE expr

    lLP    偏移，並進入狀態 46
    lID    偏移，並進入狀態 47
    lINUM  偏移，並進入狀態 48
    lRNUM  偏移，並進入狀態 49

    expr         進入狀態 61
    multiexpr    進入狀態 51
    primaryexpr  進入狀態 52
    boolexpr     進入狀態 62


狀態 46

   34 expr: . multiexpr omultiexpr
   35 multiexpr: . primaryexpr oprimaryexpr
   39 primaryexpr: . lINUM
   40            | . lRNUM
   41            | . lID
   42            | . lLP expr lRP
   42            | lLP . expr lRP
   43            | . lID lLP actualparams lRP

    lLP    偏移，並進入狀態 46
    lID    偏移，並進入狀態 47
    lINUM  偏移，並進入狀態 48
    lRNUM  偏移，並進入狀態 49

    expr         進入狀態 63
    multiexpr    進入狀態 51
    primaryexpr  進入狀態 52


狀態 47

   41 primaryexpr: lID .  [lEQU, lNEQ, lGT, lLT, lGE, lLE, lADD, lMINUS, lTIMES, lDIVIDE, lRP, lSEMI, lCOMMA]
   43            | lID . lLP actualparams lRP

    lLP  偏移，並進入狀態 64

    $default  使用規則 41 以縮減 (primaryexpr)


狀態 48

   39 primaryexpr: lINUM .

    $default  使用規則 39 以縮減 (primaryexpr)


狀態 49

   40 primaryexpr: lRNUM .

    $default  使用規則 40 以縮減 (primaryexpr)


狀態 50

   28 returnstmt: lRETURN expr . lSEMI

    lSEMI  偏移，並進入狀態 65


狀態 51

   34 expr: multiexpr . omultiexpr
   36 omultiexpr: . lADD multiexpr omultiexpr
   37           | . lMINUS multiexpr omultiexpr
   38           | . %empty  [lEQU, lNEQ, lGT, lLT, lGE, lLE, lRP, lSEMI, lCOMMA]

    lADD    偏移，並進入狀態 66
    lMINUS  偏移，並進入狀態 67

    $default  使用規則 38 以縮減 (omultiexpr)

    omultiexpr  進入狀態 68


狀態 52

   35 multiexpr: primaryexpr . oprimaryexpr
   44 oprimaryexpr: . lTIMES primaryexpr oprimaryexpr
   45             | . lDIVIDE primaryexpr oprimaryexpr
   46             | . %empty  [lEQU, lNEQ, lGT, lLT, lGE, lLE, lADD, lMINUS, lRP, lSEMI, lCOMMA]

    lTIMES   偏移，並進入狀態 69
    lDIVIDE  偏移，並進入狀態 70

    $default  使用規則 46 以縮減 (oprimaryexpr)

    oprimaryexpr  進入狀態 71


狀態 53

   27 assignstmt: lID lASSIGN . expr lSEMI
   34 expr: . multiexpr omultiexpr
   35 multiexpr: . primaryexpr oprimaryexpr
   39 primaryexpr: . lINUM
   40            | . lRNUM
   41            | . lID
   42            | . lLP expr lRP
   43            | . lID lLP actualparams lRP

    lLP    偏移，並進入狀態 46
    lID    偏移，並進入狀態 47
    lINUM  偏移，並進入狀態 48
    lRNUM  偏移，並進入狀態 49

    expr         進入狀態 72
    multiexpr    進入狀態 51
    primaryexpr  進入狀態 52


狀態 54

   25 localvardcl: type lID . lSEMI
   27 assignstmt: lID . lASSIGN expr lSEMI

    lASSIGN  偏移，並進入狀態 53
    lSEMI    偏移，並進入狀態 73


狀態 55

   26 localvardcl: type assignstmt .

    $default  使用規則 26 以縮減 (localvardcl)


狀態 56

   14 block: lBEGIN stmts lEND .

    $default  使用規則 14 以縮減 (block)


狀態 57

   15 stmts: stmt ostmts .

    $default  使用規則 15 以縮減 (stmts)


狀態 58

    5 type: . lINT
    6     | . lREAL
   14 block: . lBEGIN stmts lEND
   16 ostmts: . stmt ostmts
   16       | stmt . ostmts
   17       | . %empty  [lEND]
   18 stmt: . block
   19     | . localvardcl
   20     | . assignstmt
   21     | . returnstmt
   22     | . ifstmt
   23     | . writestmt
   24     | . readstmt
   25 localvardcl: . type lID lSEMI
   26            | . type assignstmt
   27 assignstmt: . lID lASSIGN expr lSEMI
   28 returnstmt: . lRETURN expr lSEMI
   29 ifstmt: . lIF lLP boolexpr lRP stmt elsestmt
   32 writestmt: . lWRITE lLP expr lCOMMA lQSTR lRP lSEMI
   33 readstmt: . lREAD lLP lID lCOMMA lQSTR lRP lSEMI

    lWRITE   偏移，並進入狀態 27
    lREAD    偏移，並進入狀態 28
    lIF      偏移，並進入狀態 29
    lRETURN  偏移，並進入狀態 30
    lBEGIN   偏移，並進入狀態 23
    lINT     偏移，並進入狀態 1
    lREAL    偏移，並進入狀態 2
    lID      偏移，並進入狀態 31

    $default  使用規則 17 以縮減 (ostmts)

    type         進入狀態 32
    block        進入狀態 33
    ostmts       進入狀態 74
    stmt         進入狀態 58
    localvardcl  進入狀態 36
    assignstmt   進入狀態 37
    returnstmt   進入狀態 38
    ifstmt       進入狀態 39
    writestmt    進入狀態 40
    readstmt     進入狀態 41


狀態 59

   32 writestmt: lWRITE lLP expr . lCOMMA lQSTR lRP lSEMI

    lCOMMA  偏移，並進入狀態 75


狀態 60

   33 readstmt: lREAD lLP lID . lCOMMA lQSTR lRP lSEMI

    lCOMMA  偏移，並進入狀態 76


狀態 61

   47 boolexpr: expr . lEQU expr
   48         | expr . lNEQ expr
   49         | expr . lGT expr
   50         | expr . lGE expr
   51         | expr . lLT expr
   52         | expr . lLE expr

    lEQU  偏移，並進入狀態 77
    lNEQ  偏移，並進入狀態 78
    lGT   偏移，並進入狀態 79
    lLT   偏移，並進入狀態 80
    lGE   偏移，並進入狀態 81
    lLE   偏移，並進入狀態 82


狀態 62

   29 ifstmt: lIF lLP boolexpr . lRP stmt elsestmt

    lRP  偏移，並進入狀態 83


狀態 63

   42 primaryexpr: lLP expr . lRP

    lRP  偏移，並進入狀態 84


狀態 64

   34 expr: . multiexpr omultiexpr
   35 multiexpr: . primaryexpr oprimaryexpr
   39 primaryexpr: . lINUM
   40            | . lRNUM
   41            | . lID
   42            | . lLP expr lRP
   43            | . lID lLP actualparams lRP
   43            | lID lLP . actualparams lRP
   53 actualparams: . actualparam
   54             | . %empty  [lRP]
   55 actualparam: . expr oactualparam

    lLP    偏移，並進入狀態 46
    lID    偏移，並進入狀態 47
    lINUM  偏移，並進入狀態 48
    lRNUM  偏移，並進入狀態 49

    $default  使用規則 54 以縮減 (actualparams)

    expr          進入狀態 85
    multiexpr     進入狀態 51
    primaryexpr   進入狀態 52
    actualparams  進入狀態 86
    actualparam   進入狀態 87


狀態 65

   28 returnstmt: lRETURN expr lSEMI .

    $default  使用規則 28 以縮減 (returnstmt)


狀態 66

   35 multiexpr: . primaryexpr oprimaryexpr
   36 omultiexpr: lADD . multiexpr omultiexpr
   39 primaryexpr: . lINUM
   40            | . lRNUM
   41            | . lID
   42            | . lLP expr lRP
   43            | . lID lLP actualparams lRP

    lLP    偏移，並進入狀態 46
    lID    偏移，並進入狀態 47
    lINUM  偏移，並進入狀態 48
    lRNUM  偏移，並進入狀態 49

    multiexpr    進入狀態 88
    primaryexpr  進入狀態 52


狀態 67

   35 multiexpr: . primaryexpr oprimaryexpr
   37 omultiexpr: lMINUS . multiexpr omultiexpr
   39 primaryexpr: . lINUM
   40            | . lRNUM
   41            | . lID
   42            | . lLP expr lRP
   43            | . lID lLP actualparams lRP

    lLP    偏移，並進入狀態 46
    lID    偏移，並進入狀態 47
    lINUM  偏移，並進入狀態 48
    lRNUM  偏移，並進入狀態 49

    multiexpr    進入狀態 89
    primaryexpr  進入狀態 52


狀態 68

   34 expr: multiexpr omultiexpr .

    $default  使用規則 34 以縮減 (expr)


狀態 69

   39 primaryexpr: . lINUM
   40            | . lRNUM
   41            | . lID
   42            | . lLP expr lRP
   43            | . lID lLP actualparams lRP
   44 oprimaryexpr: lTIMES . primaryexpr oprimaryexpr

    lLP    偏移，並進入狀態 46
    lID    偏移，並進入狀態 47
    lINUM  偏移，並進入狀態 48
    lRNUM  偏移，並進入狀態 49

    primaryexpr  進入狀態 90


狀態 70

   39 primaryexpr: . lINUM
   40            | . lRNUM
   41            | . lID
   42            | . lLP expr lRP
   43            | . lID lLP actualparams lRP
   45 oprimaryexpr: lDIVIDE . primaryexpr oprimaryexpr

    lLP    偏移，並進入狀態 46
    lID    偏移，並進入狀態 47
    lINUM  偏移，並進入狀態 48
    lRNUM  偏移，並進入狀態 49

    primaryexpr  進入狀態 91


狀態 71

   35 multiexpr: primaryexpr oprimaryexpr .

    $default  使用規則 35 以縮減 (multiexpr)


狀態 72

   27 assignstmt: lID lASSIGN expr . lSEMI

    lSEMI  偏移，並進入狀態 92


狀態 73

   25 localvardcl: type lID lSEMI .

    $default  使用規則 25 以縮減 (localvardcl)


狀態 74

   16 ostmts: stmt ostmts .

    $default  使用規則 16 以縮減 (ostmts)


狀態 75

   32 writestmt: lWRITE lLP expr lCOMMA . lQSTR lRP lSEMI

    lQSTR  偏移，並進入狀態 93


狀態 76

   33 readstmt: lREAD lLP lID lCOMMA . lQSTR lRP lSEMI

    lQSTR  偏移，並進入狀態 94


狀態 77

   34 expr: . multiexpr omultiexpr
   35 multiexpr: . primaryexpr oprimaryexpr
   39 primaryexpr: . lINUM
   40            | . lRNUM
   41            | . lID
   42            | . lLP expr lRP
   43            | . lID lLP actualparams lRP
   47 boolexpr: expr lEQU . expr

    lLP    偏移，並進入狀態 46
    lID    偏移，並進入狀態 47
    lINUM  偏移，並進入狀態 48
    lRNUM  偏移，並進入狀態 49

    expr         進入狀態 95
    multiexpr    進入狀態 51
    primaryexpr  進入狀態 52


狀態 78

   34 expr: . multiexpr omultiexpr
   35 multiexpr: . primaryexpr oprimaryexpr
   39 primaryexpr: . lINUM
   40            | . lRNUM
   41            | . lID
   42            | . lLP expr lRP
   43            | . lID lLP actualparams lRP
   48 boolexpr: expr lNEQ . expr

    lLP    偏移，並進入狀態 46
    lID    偏移，並進入狀態 47
    lINUM  偏移，並進入狀態 48
    lRNUM  偏移，並進入狀態 49

    expr         進入狀態 96
    multiexpr    進入狀態 51
    primaryexpr  進入狀態 52


狀態 79

   34 expr: . multiexpr omultiexpr
   35 multiexpr: . primaryexpr oprimaryexpr
   39 primaryexpr: . lINUM
   40            | . lRNUM
   41            | . lID
   42            | . lLP expr lRP
   43            | . lID lLP actualparams lRP
   49 boolexpr: expr lGT . expr

    lLP    偏移，並進入狀態 46
    lID    偏移，並進入狀態 47
    lINUM  偏移，並進入狀態 48
    lRNUM  偏移，並進入狀態 49

    expr         進入狀態 97
    multiexpr    進入狀態 51
    primaryexpr  進入狀態 52


狀態 80

   34 expr: . multiexpr omultiexpr
   35 multiexpr: . primaryexpr oprimaryexpr
   39 primaryexpr: . lINUM
   40            | . lRNUM
   41            | . lID
   42            | . lLP expr lRP
   43            | . lID lLP actualparams lRP
   51 boolexpr: expr lLT . expr

    lLP    偏移，並進入狀態 46
    lID    偏移，並進入狀態 47
    lINUM  偏移，並進入狀態 48
    lRNUM  偏移，並進入狀態 49

    expr         進入狀態 98
    multiexpr    進入狀態 51
    primaryexpr  進入狀態 52


狀態 81

   34 expr: . multiexpr omultiexpr
   35 multiexpr: . primaryexpr oprimaryexpr
   39 primaryexpr: . lINUM
   40            | . lRNUM
   41            | . lID
   42            | . lLP expr lRP
   43            | . lID lLP actualparams lRP
   50 boolexpr: expr lGE . expr

    lLP    偏移，並進入狀態 46
    lID    偏移，並進入狀態 47
    lINUM  偏移，並進入狀態 48
    lRNUM  偏移，並進入狀態 49

    expr         進入狀態 99
    multiexpr    進入狀態 51
    primaryexpr  進入狀態 52


狀態 82

   34 expr: . multiexpr omultiexpr
   35 multiexpr: . primaryexpr oprimaryexpr
   39 primaryexpr: . lINUM
   40            | . lRNUM
   41            | . lID
   42            | . lLP expr lRP
   43            | . lID lLP actualparams lRP
   52 boolexpr: expr lLE . expr

    lLP    偏移，並進入狀態 46
    lID    偏移，並進入狀態 47
    lINUM  偏移，並進入狀態 48
    lRNUM  偏移，並進入狀態 49

    expr         進入狀態 100
    multiexpr    進入狀態 51
    primaryexpr  進入狀態 52


狀態 83

    5 type: . lINT
    6     | . lREAL
   14 block: . lBEGIN stmts lEND
   18 stmt: . block
   19     | . localvardcl
   20     | . assignstmt
   21     | . returnstmt
   22     | . ifstmt
   23     | . writestmt
   24     | . readstmt
   25 localvardcl: . type lID lSEMI
   26            | . type assignstmt
   27 assignstmt: . lID lASSIGN expr lSEMI
   28 returnstmt: . lRETURN expr lSEMI
   29 ifstmt: . lIF lLP boolexpr lRP stmt elsestmt
   29       | lIF lLP boolexpr lRP . stmt elsestmt
   32 writestmt: . lWRITE lLP expr lCOMMA lQSTR lRP lSEMI
   33 readstmt: . lREAD lLP lID lCOMMA lQSTR lRP lSEMI

    lWRITE   偏移，並進入狀態 27
    lREAD    偏移，並進入狀態 28
    lIF      偏移，並進入狀態 29
    lRETURN  偏移，並進入狀態 30
    lBEGIN   偏移，並進入狀態 23
    lINT     偏移，並進入狀態 1
    lREAL    偏移，並進入狀態 2
    lID      偏移，並進入狀態 31

    type         進入狀態 32
    block        進入狀態 33
    stmt         進入狀態 101
    localvardcl  進入狀態 36
    assignstmt   進入狀態 37
    returnstmt   進入狀態 38
    ifstmt       進入狀態 39
    writestmt    進入狀態 40
    readstmt     進入狀態 41


狀態 84

   42 primaryexpr: lLP expr lRP .

    $default  使用規則 42 以縮減 (primaryexpr)


狀態 85

   55 actualparam: expr . oactualparam
   56 oactualparam: . lCOMMA expr oactualparam
   57             | . %empty  [lRP]

    lCOMMA  偏移，並進入狀態 102

    $default  使用規則 57 以縮減 (oactualparam)

    oactualparam  進入狀態 103


狀態 86

   43 primaryexpr: lID lLP actualparams . lRP

    lRP  偏移，並進入狀態 104


狀態 87

   53 actualparams: actualparam .

    $default  使用規則 53 以縮減 (actualparams)


狀態 88

   36 omultiexpr: . lADD multiexpr omultiexpr
   36           | lADD multiexpr . omultiexpr
   37           | . lMINUS multiexpr omultiexpr
   38           | . %empty  [lEQU, lNEQ, lGT, lLT, lGE, lLE, lRP, lSEMI, lCOMMA]

    lADD    偏移，並進入狀態 66
    lMINUS  偏移，並進入狀態 67

    $default  使用規則 38 以縮減 (omultiexpr)

    omultiexpr  進入狀態 105


狀態 89

   36 omultiexpr: . lADD multiexpr omultiexpr
   37           | . lMINUS multiexpr omultiexpr
   37           | lMINUS multiexpr . omultiexpr
   38           | . %empty  [lEQU, lNEQ, lGT, lLT, lGE, lLE, lRP, lSEMI, lCOMMA]

    lADD    偏移，並進入狀態 66
    lMINUS  偏移，並進入狀態 67

    $default  使用規則 38 以縮減 (omultiexpr)

    omultiexpr  進入狀態 106


狀態 90

   44 oprimaryexpr: . lTIMES primaryexpr oprimaryexpr
   44             | lTIMES primaryexpr . oprimaryexpr
   45             | . lDIVIDE primaryexpr oprimaryexpr
   46             | . %empty  [lEQU, lNEQ, lGT, lLT, lGE, lLE, lADD, lMINUS, lRP, lSEMI, lCOMMA]

    lTIMES   偏移，並進入狀態 69
    lDIVIDE  偏移，並進入狀態 70

    $default  使用規則 46 以縮減 (oprimaryexpr)

    oprimaryexpr  進入狀態 107


狀態 91

   44 oprimaryexpr: . lTIMES primaryexpr oprimaryexpr
   45             | . lDIVIDE primaryexpr oprimaryexpr
   45             | lDIVIDE primaryexpr . oprimaryexpr
   46             | . %empty  [lEQU, lNEQ, lGT, lLT, lGE, lLE, lADD, lMINUS, lRP, lSEMI, lCOMMA]

    lTIMES   偏移，並進入狀態 69
    lDIVIDE  偏移，並進入狀態 70

    $default  使用規則 46 以縮減 (oprimaryexpr)

    oprimaryexpr  進入狀態 108


狀態 92

   27 assignstmt: lID lASSIGN expr lSEMI .

    $default  使用規則 27 以縮減 (assignstmt)


狀態 93

   32 writestmt: lWRITE lLP expr lCOMMA lQSTR . lRP lSEMI

    lRP  偏移，並進入狀態 109


狀態 94

   33 readstmt: lREAD lLP lID lCOMMA lQSTR . lRP lSEMI

    lRP  偏移，並進入狀態 110


狀態 95

   47 boolexpr: expr lEQU expr .

    $default  使用規則 47 以縮減 (boolexpr)


狀態 96

   48 boolexpr: expr lNEQ expr .

    $default  使用規則 48 以縮減 (boolexpr)


狀態 97

   49 boolexpr: expr lGT expr .

    $default  使用規則 49 以縮減 (boolexpr)


狀態 98

   51 boolexpr: expr lLT expr .

    $default  使用規則 51 以縮減 (boolexpr)


狀態 99

   50 boolexpr: expr lGE expr .

    $default  使用規則 50 以縮減 (boolexpr)


狀態 100

   52 boolexpr: expr lLE expr .

    $default  使用規則 52 以縮減 (boolexpr)


狀態 101

   29 ifstmt: lIF lLP boolexpr lRP stmt . elsestmt
   30 elsestmt: . lELSE stmt
   31         | . %empty  [lWRITE, lREAD, lIF, lRETURN, lBEGIN, lEND, lINT, lREAL, lELSE, lID]

    lELSE  偏移，並進入狀態 111

    lELSE     [使用規則 31 以縮減 (elsestmt)]
    $default  使用規則 31 以縮減 (elsestmt)

    elsestmt  進入狀態 112


狀態 102

   34 expr: . multiexpr omultiexpr
   35 multiexpr: . primaryexpr oprimaryexpr
   39 primaryexpr: . lINUM
   40            | . lRNUM
   41            | . lID
   42            | . lLP expr lRP
   43            | . lID lLP actualparams lRP
   56 oactualparam: lCOMMA . expr oactualparam

    lLP    偏移，並進入狀態 46
    lID    偏移，並進入狀態 47
    lINUM  偏移，並進入狀態 48
    lRNUM  偏移，並進入狀態 49

    expr         進入狀態 113
    multiexpr    進入狀態 51
    primaryexpr  進入狀態 52


狀態 103

   55 actualparam: expr oactualparam .

    $default  使用規則 55 以縮減 (actualparam)


狀態 104

   43 primaryexpr: lID lLP actualparams lRP .

    $default  使用規則 43 以縮減 (primaryexpr)


狀態 105

   36 omultiexpr: lADD multiexpr omultiexpr .

    $default  使用規則 36 以縮減 (omultiexpr)


狀態 106

   37 omultiexpr: lMINUS multiexpr omultiexpr .

    $default  使用規則 37 以縮減 (omultiexpr)


狀態 107

   44 oprimaryexpr: lTIMES primaryexpr oprimaryexpr .

    $default  使用規則 44 以縮減 (oprimaryexpr)


狀態 108

   45 oprimaryexpr: lDIVIDE primaryexpr oprimaryexpr .

    $default  使用規則 45 以縮減 (oprimaryexpr)


狀態 109

   32 writestmt: lWRITE lLP expr lCOMMA lQSTR lRP . lSEMI

    lSEMI  偏移，並進入狀態 114


狀態 110

   33 readstmt: lREAD lLP lID lCOMMA lQSTR lRP . lSEMI

    lSEMI  偏移，並進入狀態 115


狀態 111

    5 type: . lINT
    6     | . lREAL
   14 block: . lBEGIN stmts lEND
   18 stmt: . block
   19     | . localvardcl
   20     | . assignstmt
   21     | . returnstmt
   22     | . ifstmt
   23     | . writestmt
   24     | . readstmt
   25 localvardcl: . type lID lSEMI
   26            | . type assignstmt
   27 assignstmt: . lID lASSIGN expr lSEMI
   28 returnstmt: . lRETURN expr lSEMI
   29 ifstmt: . lIF lLP boolexpr lRP stmt elsestmt
   30 elsestmt: lELSE . stmt
   32 writestmt: . lWRITE lLP expr lCOMMA lQSTR lRP lSEMI
   33 readstmt: . lREAD lLP lID lCOMMA lQSTR lRP lSEMI

    lWRITE   偏移，並進入狀態 27
    lREAD    偏移，並進入狀態 28
    lIF      偏移，並進入狀態 29
    lRETURN  偏移，並進入狀態 30
    lBEGIN   偏移，並進入狀態 23
    lINT     偏移，並進入狀態 1
    lREAL    偏移，並進入狀態 2
    lID      偏移，並進入狀態 31

    type         進入狀態 32
    block        進入狀態 33
    stmt         進入狀態 116
    localvardcl  進入狀態 36
    assignstmt   進入狀態 37
    returnstmt   進入狀態 38
    ifstmt       進入狀態 39
    writestmt    進入狀態 40
    readstmt     進入狀態 41


狀態 112

   29 ifstmt: lIF lLP boolexpr lRP stmt elsestmt .

    $default  使用規則 29 以縮減 (ifstmt)


狀態 113

   56 oactualparam: . lCOMMA expr oactualparam
   56             | lCOMMA expr . oactualparam
   57             | . %empty  [lRP]

    lCOMMA  偏移，並進入狀態 102

    $default  使用規則 57 以縮減 (oactualparam)

    oactualparam  進入狀態 117


狀態 114

   32 writestmt: lWRITE lLP expr lCOMMA lQSTR lRP lSEMI .

    $default  使用規則 32 以縮減 (writestmt)


狀態 115

   33 readstmt: lREAD lLP lID lCOMMA lQSTR lRP lSEMI .

    $default  使用規則 33 以縮減 (readstmt)


狀態 116

   30 elsestmt: lELSE stmt .

    $default  使用規則 30 以縮減 (elsestmt)


狀態 117

   56 oactualparam: lCOMMA expr oactualparam .

    $default  使用規則 56 以縮減 (oactualparam)
